@using RPG.Controllers.Common
@using RPG.Controllers.Extenstions
@using RPG.Models.RulebookModal
@model RPG.Models.ControllerDto.Creator.SpellDataDto
@{
    ViewBag.Title = "Spell";
    Layout = "~/Views/Shared/CreatorLayoutPage.cshtml";
}

@using (Html.BeginForm("Save", "Spell", FormMethod.Post))
{
    <div class="row">
        <div class="col-xs-12">
            <h2>Add Spell</h2>
            <div class="row">
                <ul class="nav nav-tabs">
                    <li class="active"><a data-toggle="tab" href="#baseInfo">Base info</a></li>
                    <li><a data-toggle="tab" href="#damage">Damage</a></li>
                </ul>
                <div class="tab-content">
                    <div id="baseInfo" class="tab-pane fade in active">
                        <div class="col-xs-12">
                            <div class="form-group">
                                <div class="row">
                                    @Html.HiddenFor(m => m.SelectedItem.ID)
                                    @Html.LabelForRequired(m => m.SelectedItem.Name) 
                                    @Html.TextBoxFor(m => m.SelectedItem.Name,HtmlConfiguration.TextBoxFor_Text)
                                    @Html.ValidationMessageFor(m => m.SelectedItem.Name)
                                </div>
                                <div class="row">
                                    <label>Description:</label>
                                    @Html.TextAreaFor(m => m.SelectedItem.Description,HtmlConfiguration.TextBoxFor_Text)
                                </div>
                                <div class="row">
                                    <label>Spell School:</label>
                                    @Html.DropDownListFor(a => a.SpellSchool, new SelectList(Model.AllSchools, "ID", "Name", Model.SpellSchool), HtmlConfiguration.DropDownListFor)
                                </div>
                                <div class="row">
                                    <label>Spell Descriptor:</label>
                                    @Html.ListBoxFor(m => m.SpellDescriptor, new SelectList(Model.AllDescriptors, "ID", "Name", Model.SpellDescriptor), HtmlConfiguration.ListBoxFor_SelectSingle)
                                </div>
                                <div class="row">
                                    <label>Spell Components:</label>
                                    @Html.ListBoxFor(m => m.Components, new SelectList(Model.AllComponents, "ID", "Name", Model.Components), HtmlConfiguration.ListBoxFor_SelectMultiple)
                                </div>
                                <div class="row">
                                    <label>Casting time:</label>
                                    @Html.DropDownListFor(a => a.SelectedItem.CastingTime, Tools.CastingTimeAsSelectList(), HtmlConfiguration.DropDownListFor)
                                </div>
                                <div class="row">
                                    <label>Spell range:</label>
                                    @Html.DropDownListFor(a => a.SelectedItem.Range, Tools.SpellRangeAsSelectList(), HtmlConfiguration.DropDownListFor)
                                </div>
                                <div class="row">
                                    <label>Spell range (Fixed in feet):</label>
                                    @Html.TextBoxFor(a => a.SelectedItem.FixedRangeExpresedInFeet, HtmlConfiguration.TextBoxFor_Number)
                                </div>
                                <div class="row">
                                    <label>Ability cast on target:</label>
                                    @Html.ListBoxFor(m => m.SpellAbility, new SelectList(Model.AllSpecialAbilities, "ID", "Name", Model.SpellAbility), HtmlConfiguration.ListBoxFor_SelectSingle)
                                </div>
                                <div class="row">
                                    <label>Target:</label>
                                    @Html.TextBoxFor(m => m.SelectedItem.Target,HtmlConfiguration.TextBoxFor_Text)
                                </div>
                                <div class="row">
                                    <label>Save:</label>
                                    @Html.ListBoxFor(m => m.Save, new SelectList(Model.AllSaves, "ID", "Name", Model.Save), HtmlConfiguration.ListBoxFor_SelectSingle)
                                </div>
                                <div class="row">
                                    <div class="checkbox">
                                        <label class="btn btn-default width100">
                                            @Html.CheckBoxFor(m => m.SelectedItem.SpellResistance)
                                            Spell Resistance?
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="damage" class="tab-pane fade in">
                        <div class="col-xs-12">
                            <div class="form-group">
                                <div class="row">
                                    <label>Fixed Damage (format ex: 2d6 + 1):</label>
                                    @Html.TextBoxFor(m => m.DamageString,HtmlConfiguration.TextBoxFor_Text)
                                </div>
                                <div class="row">
                                    <label>By caster level: TODO</label>
                                </div>
                                <div class="row">
                                    <label>Damage type:</label>
                                    @Html.DropDownListFor(a => a.DamageType, Tools.DamageTypeAsSelectList(),"--Non--", HtmlConfiguration.ListBoxFor_SelectSingle)
                                </div>
                            </div>
						</div>
					</div>
                </div>
            </div>
            <button class="btn btn-primary">Save</button>
            <a class="btn btn-primary" href="@Url.Action("Index", new { id = (Guid?)null })">New</a>
            @Html.ActionLink("Delete","Delete","Spell",new { id = Model != null && Model.SelectedItem != null ? Model.SelectedItem.ID : (Guid?)null},HtmlConfiguration.ActionLink_Button)
            @Html.ActionLink("Edit Caster Requirements","Index","SpellCasterRequirements",new { id = Model != null && Model.SelectedItem != null ? Model.SelectedItem.ID : (Guid?)null,crId = Guid.Empty},HtmlConfiguration.ActionLink_Button)
            
        </div>
    </div>
}

